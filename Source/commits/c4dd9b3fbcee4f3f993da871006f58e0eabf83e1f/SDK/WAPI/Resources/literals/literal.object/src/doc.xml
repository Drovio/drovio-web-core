<?xml version="1.0" encoding="UTF-8"?>
<manual library="WAPI" package="Resources" namespace="\literals">
  <class name="literal" abstract="">
    <info>
      <version>0.1</version>
      <build>1</build>
      <datecreated>1412357209</datecreated>
      <daterevised>1412357209</daterevised>
      <extends>
        <object>\WAPI\Resources\literals\literalController</object>
      </extends>
      <implements/>
      <throws/>
      <title>Literal Handler</title>
      <description>Handles all translated and non-translated literals.</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected">
        <prop type="array" name="translatedLiterals" static="true">
          <description>Stores the translated literals in the language requested</description>
        </prop>
        <prop type="array" name="nonTranslatedLiterals" static="true">
          <description>Stores the non translated literals in the language requested</description>
        </prop>
        <prop type="array" name="literals" static="true">
          <description>Stores all the literals</description>
        </prop>
      </scope>
      <scope type="private"/>
    </properties>
    <methods>
      <scope type="public">
        <method name="dictionary" returntype="mixed" static="true">
          <description>Gets the dictionary literals</description>
          <parameters>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The literal's name.</description>
            </parameter>
            <parameter name="$wrapped" type="boolean" defaultvalue="">
              <description>Whether the literal will be wrapped inside a span</description>
            </parameter>
          </parameters>
          <returndescription>An array of literals or the literal value.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="get" returntype="mixed" static="true">
          <description>Get a literal.</description>
          <parameters>
            <parameter name="$scope" type="string" defaultvalue="">
              <description>The literal's scope</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The literal's name</description>
            </parameter>
            <parameter name="$attributes" type="array" defaultvalue="">
              <description>An array of attributes to pass to the literal.</description>
            </parameter>
            <parameter name="$wrapped" type="boolean" defaultvalue="">
              <description>Whether the literal will be wrapped inside a span.</description>
            </parameter>
            <parameter name="$locale" type="string" defaultvalue="">
              <description>The locale to get the literals from. If NULL, get the current system locale.</description>
            </parameter>
          </parameters>
          <returndescription>The literal span if wrap is requested or the literal value.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="add" returntype="boolean" static="true">
          <description>Add a new literal to the default locale.</description>
          <parameters>
            <parameter name="$scope" type="string" defaultvalue="">
              <description>The literal's scope</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The literal's name</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The literal's value</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The literal's description</description>
            </parameter>
            <parameter name="$static" type="boolean" defaultvalue="">
              <description>Defines whether the literal is static and is translated along with all other static literals in the beginning of a new locale.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="update" returntype="boolean" static="true">
          <description>Update a literal to the default locale</description>
          <parameters>
            <parameter name="$scope" type="string" defaultvalue="">
              <description>The literal's scope</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The literal's name</description>
            </parameter>
            <parameter name="$value" type="string" defaultvalue="">
              <description>The literal's new value</description>
            </parameter>
            <parameter name="$description" type="string" defaultvalue="">
              <description>The literal's name</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="remove" returntype="boolean" static="true">
          <description>Remove a literal.</description>
          <parameters>
            <parameter name="$scope" type="string" defaultvalue="">
              <description>The literal's scope.</description>
            </parameter>
            <parameter name="$name" type="string" defaultvalue="">
              <description>The literal's name.</description>
            </parameter>
          </parameters>
          <returndescription>True on success, false on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private"/>
    </methods>
  </class>
</manual>
