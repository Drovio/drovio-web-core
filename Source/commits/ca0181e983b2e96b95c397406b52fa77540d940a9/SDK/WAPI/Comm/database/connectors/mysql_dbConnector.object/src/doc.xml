<?xml version="1.0" encoding="UTF-8"?>
<manual library="WAPI" package="Comm" namespace="\database\connectors">
  <class name="mysql_dbConnector" abstract="" namespace="">
    <info>
      <version/>
      <datecreated>1403512484</datecreated>
      <daterevised>1403512484</daterevised>
      <extends/>
      <implements/>
      <throws/>
      <title>MySQL Database Connector</title>
      <description>Connector for MySQL Databases</description>
      <deprecated/>
    </info>
    <constants/>
    <properties>
      <scope type="public"/>
      <scope type="protected"/>
      <scope type="private">
        <prop type="string" name="connection">
          <description>Connection id</description>
        </prop>
        <prop type="string" name="host">
          <description>The host URL</description>
        </prop>
        <prop type="string" name="username">
          <description>The user's username</description>
        </prop>
        <prop type="string" name="password">
          <description>The user's password</description>
        </prop>
        <prop type="string" name="database">
          <description>The database's name</description>
        </prop>
      </scope>
    </properties>
    <methods>
      <scope type="public">
        <method name="setHandler" returntype="void">
          <description>Initialize the object with the proper properties</description>
          <parameters>
            <parameter name="$host" type="string" defaultvalue="">
              <description>The host's URL</description>
            </parameter>
            <parameter name="$username" type="string" defaultvalue="">
              <description>The user's username</description>
            </parameter>
            <parameter name="$password" type="string" defaultvalue="">
              <description>The user's password</description>
            </parameter>
            <parameter name="$database" type="string" defaultvalue="">
              <description>The database's name</description>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="execute" returntype="mixed">
          <description>Executes a query to the database. It supports multiple queries separated with ";".</description>
          <parameters>
            <parameter name="$query" type="string" defaultvalue="">
              <description>The query to be executed.</description>
            </parameter>
          </parameters>
          <returndescription>Returns FALSE on failure.
For successful SELECT, SHOW, DESCRIBE or EXPLAIN queries mysqli_query() will return a mysqli_result object.
For other successful queries mysqli_query() will return TRUE.</returndescription>
          <throws>
            <exception>Exception</exception>
          </throws>
          <deprecated/>
        </method>
        <method name="fetch" returntype="array">
          <description>Fetch an assoc row of the resource given</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The database resource.</description>
            </parameter>
            <parameter name="$full" type="boolean" defaultvalue="">
              <description>The fetched array with one or all the rows.</description>
            </parameter>
          </parameters>
          <returndescription>The fetched array with one or all the rows.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="seek" returntype="boolean">
          <description>Adjusts the result pointer to an arbitrary row in the result</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The database resource.</description>
            </parameter>
            <parameter name="$row" type="integer" defaultvalue="">
              <description>The row number.</description>
            </parameter>
          </parameters>
          <returndescription>Returns TRUE on success or FALSE on failure.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="escape" returntype="string">
          <description>Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection.</description>
          <parameters>
            <parameter name="$resource" type="string" defaultvalue="">
              <description>The string we want to escape.</description>
            </parameter>
          </parameters>
          <returndescription>Returns an escaped string.</returndescription>
          <throws>
            <exception>Exception</exception>
          </throws>
          <deprecated/>
        </method>
        <method name="get_num_rows" returntype="integer">
          <description>Get the resource row count.</description>
          <parameters>
            <parameter name="$resource" type="resource" defaultvalue="">
              <description>The database resource.</description>
            </parameter>
          </parameters>
          <returndescription>Returns the number of rows of the resource.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="execute_query" returntype="void">
          <description/>
          <parameters>
            <parameter name="$query" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="execute_query_transaction" returntype="void">
          <description/>
          <parameters>
            <parameter name="$query" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="execute_transaction" returntype="void">
          <description/>
          <parameters>
            <parameter name="$queries" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="fetch_all" returntype="void">
          <description/>
          <parameters>
            <parameter name="$resource" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="clear_resource" returntype="void">
          <description/>
          <parameters>
            <parameter name="$resource" type="" defaultvalue="">
              <description/>
            </parameter>
          </parameters>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
      <scope type="protected"/>
      <scope type="private">
        <method name="executeTransaction" returntype="mixed">
          <description>Executes a transaction to the database.</description>
          <parameters>
            <parameter name="$queries" type="array" defaultvalue="">
              <description>An array of query strings.</description>
            </parameter>
          </parameters>
          <returndescription>Returns FALSE on failure.
For successful SELECT, SHOW, DESCRIBE or EXPLAIN queries mysqli_query() will return a mysqli_result object.
For other successful queries mysqli_query() will return TRUE.</returndescription>
          <throws/>
          <deprecated/>
        </method>
        <method name="connect" returntype="void">
          <description>Connects to the server.</description>
          <parameters/>
          <returndescription/>
          <throws>
            <exception>Exception</exception>
          </throws>
          <deprecated/>
        </method>
        <method name="select" returntype="void">
          <description>Selects the database.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
        <method name="disconnect" returntype="void">
          <description>Disconnects from the server.</description>
          <parameters/>
          <returndescription/>
          <throws/>
          <deprecated/>
        </method>
      </scope>
    </methods>
  </class>
</manual>
